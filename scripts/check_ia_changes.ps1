# ========================================
# üîç CHECK IA CHANGES - D√âTECTION MODIFICATIONS
# ========================================
# Compare la branche 'ia' avec 'main' pour voir les changements
# Usage: powershell ./scripts/check_ia_changes.ps1

$ErrorActionPreference = "Stop"

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üîç D√âTECTION DES MODIFICATIONS IA" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# V√©rifier qu'on est dans un repo Git
if (-not (Test-Path ".git")) {
    Write-Host "‚ùå ERREUR: Pas de d√©p√¥t Git trouv√©!" -ForegroundColor Red
    Write-Host "   Ex√©cutez d'abord: git init" -ForegroundColor Yellow
    exit 1
}

# R√©cup√©rer la branche actuelle
$currentBranch = git rev-parse --abbrev-ref HEAD

Write-Host "üìç Branche actuelle: $currentBranch" -ForegroundColor Yellow
Write-Host ""

# V√©rifier si les branches existent
$branches = git branch --list
if ($branches -notmatch "main") {
    Write-Host "‚ö†Ô∏è Branche 'main' non trouv√©e" -ForegroundColor Yellow
}
if ($branches -notmatch "ia") {
    Write-Host "‚ö†Ô∏è Branche 'ia' non trouv√©e" -ForegroundColor Yellow
    Write-Host "   Cr√©ez-la avec: git checkout -b ia" -ForegroundColor Gray
    exit 0
}

Write-Host "üîç Comparaison: main ‚Üî ia" -ForegroundColor Cyan
Write-Host ""

# Statistiques des changements
Write-Host "üìä STATISTIQUES DES CHANGEMENTS:" -ForegroundColor Yellow
Write-Host "================================" -ForegroundColor Yellow
git diff --stat main..ia
Write-Host ""

# Fichiers modifi√©s
Write-Host "üìù FICHIERS MODIFI√âS:" -ForegroundColor Yellow
Write-Host "====================" -ForegroundColor Yellow
$modifiedFiles = git diff --name-only main..ia
if ($modifiedFiles) {
    $modifiedFiles | ForEach-Object {
        Write-Host "  üìÑ $_" -ForegroundColor Gray
    }
    Write-Host ""
    Write-Host "Total: $($modifiedFiles.Count) fichiers modifi√©s" -ForegroundColor Cyan
} else {
    Write-Host "  ‚úÖ Aucune modification d√©tect√©e" -ForegroundColor Green
}
Write-Host ""

# Demander si on veut voir les d√©tails
Write-Host "üîé Voulez-vous voir les D√âTAILS des modifications? (o/n)" -ForegroundColor Yellow
$response = Read-Host

if ($response -eq "o" -or $response -eq "O") {
    Write-Host ""
    Write-Host "üìã D√âTAILS DES MODIFICATIONS:" -ForegroundColor Yellow
    Write-Host "=============================" -ForegroundColor Yellow
    git diff main..ia
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üí° ACTIONS POSSIBLES:" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "1Ô∏è‚É£  Fusionner les changements: git checkout main && git merge ia" -ForegroundColor Gray
Write-Host "2Ô∏è‚É£  Annuler les changements IA: git checkout ia && git reset --hard main" -ForegroundColor Gray
Write-Host "3Ô∏è‚É£  Cr√©er une sauvegarde: powershell ./scripts/auto_backup.ps1" -ForegroundColor Gray
Write-Host ""
