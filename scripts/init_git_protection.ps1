# ========================================
# üöÄ INITIALISATION GIT + PROTECTION IA
# ========================================
# Script d'initialisation compl√®te du syst√®me de protection
# Usage: powershell ./scripts/init_git_protection.ps1

$ErrorActionPreference = "Stop"

$projectRoot = Split-Path -Parent $PSScriptRoot

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üöÄ INITIALISATION SYST√àME ANTI-D√âRIVE IA" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# V√©rifier si Git est install√©
try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git d√©tect√©: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå ERREUR: Git n'est pas install√©!" -ForegroundColor Red
    Write-Host "   T√©l√©chargez Git: https://git-scm.com/download/win" -ForegroundColor Yellow
    exit 1
}

Write-Host ""

# V√©rifier si d√©j√† initialis√©
if (Test-Path (Join-Path $projectRoot ".git")) {
    Write-Host "‚ö†Ô∏è Git d√©j√† initialis√© dans ce projet" -ForegroundColor Yellow
    Write-Host "   Voulez-vous r√©initialiser? (o/n)" -ForegroundColor Yellow
    $response = Read-Host
    
    if ($response -ne "o" -and $response -ne "O") {
        Write-Host "‚ùå Annul√©" -ForegroundColor Red
        exit 1
    }
    
    Write-Host "üóëÔ∏è Suppression de l'ancien d√©p√¥t Git..." -ForegroundColor Yellow
    Remove-Item -Path (Join-Path $projectRoot ".git") -Recurse -Force
}

# Initialiser Git
Write-Host "üé¨ Initialisation de Git..." -ForegroundColor Yellow
Set-Location $projectRoot
git init
Write-Host "‚úÖ Git initialis√©" -ForegroundColor Green
Write-Host ""

# Cr√©er .gitignore si n'existe pas
if (-not (Test-Path (Join-Path $projectRoot ".gitignore"))) {
    Write-Host "‚ö†Ô∏è .gitignore manquant (devrait √™tre cr√©√© par le script principal)" -ForegroundColor Yellow
}

# Premier commit sur main
Write-Host "üìù Cr√©ation du commit initial..." -ForegroundColor Yellow
git checkout -b main
git add .
git commit -m "üéâ Version initiale stable - Syst√®me anti-d√©rive IA activ√©"
Write-Host "‚úÖ Commit initial cr√©√© sur 'main'" -ForegroundColor Green
Write-Host ""

# Cr√©er les branches de s√©curit√©
Write-Host "üå≥ Cr√©ation des branches de s√©curit√©..." -ForegroundColor Yellow

git checkout -b dev
Write-Host "  ‚úÖ Branche 'dev' cr√©√©e" -ForegroundColor Gray

git checkout -b ia
Write-Host "  ‚úÖ Branche 'ia' cr√©√©e" -ForegroundColor Gray

git checkout main
Write-Host "  ‚úÖ Retour sur 'main'" -ForegroundColor Gray
Write-Host ""

# Afficher les branches
Write-Host "üìä Branches cr√©√©es:" -ForegroundColor Yellow
git branch -a
Write-Host ""

# Cr√©er la premi√®re version stable
Write-Host "üîí Cr√©ation de la premi√®re version stable..." -ForegroundColor Yellow
& "$PSScriptRoot\create_stable_version.ps1" -Description "Version initiale - Syst√®me anti-d√©rive activ√©"
Write-Host ""

# Instructions pour GitHub
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üåê PROCHAINES √âTAPES - GITHUB" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "1Ô∏è‚É£  Cr√©er un nouveau d√©p√¥t sur GitHub:" -ForegroundColor Yellow
Write-Host "    https://github.com/new" -ForegroundColor Gray
Write-Host ""
Write-Host "2Ô∏è‚É£  Nom sugg√©r√©: CHATBOT2.0 ou zeta-chatbot" -ForegroundColor Yellow
Write-Host "    ‚ö†Ô∏è NE PAS cocher 'Initialize with README'" -ForegroundColor Red
Write-Host ""
Write-Host "3Ô∏è‚É£  Lier le d√©p√¥t local √† GitHub:" -ForegroundColor Yellow
Write-Host "    git remote add origin https://github.com/TON_PSEUDO/CHATBOT2.0.git" -ForegroundColor Gray
Write-Host "    git push -u origin main" -ForegroundColor Gray
Write-Host "    git push -u origin dev" -ForegroundColor Gray
Write-Host "    git push -u origin ia" -ForegroundColor Gray
Write-Host ""
Write-Host "4Ô∏è‚É£  Prot√©ger la branche main (sur GitHub):" -ForegroundColor Yellow
Write-Host "    Settings ‚Üí Branches ‚Üí Add rule" -ForegroundColor Gray
Write-Host "    Branch name: main" -ForegroundColor Gray
Write-Host "    ‚úÖ Require pull request reviews" -ForegroundColor Gray
Write-Host ""

# R√©sum√© final
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "‚úÖ SYST√àME ANTI-D√âRIVE ACTIV√â!" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìÇ Structure cr√©√©e:" -ForegroundColor Yellow
Write-Host "  ‚úÖ /stable      ‚Üí Versions verrouill√©es" -ForegroundColor Gray
Write-Host "  ‚úÖ /backup      ‚Üí Sauvegardes automatiques" -ForegroundColor Gray
Write-Host "  ‚úÖ /scripts     ‚Üí Scripts PowerShell" -ForegroundColor Gray
Write-Host "  ‚úÖ /.github     ‚Üí GitHub Actions" -ForegroundColor Gray
Write-Host ""
Write-Host "üå≥ Branches cr√©√©es:" -ForegroundColor Yellow
Write-Host "  ‚úÖ main         ‚Üí Production (prot√©g√©e)" -ForegroundColor Gray
Write-Host "  ‚úÖ dev          ‚Üí D√©veloppement" -ForegroundColor Gray
Write-Host "  ‚úÖ ia           ‚Üí Zone IA (Windsurf/Cursor)" -ForegroundColor Gray
Write-Host ""
Write-Host "üìö Documentation:" -ForegroundColor Yellow
Write-Host "  üìñ Lire: GUIDE_ANTI_DERIVE_IA.md" -ForegroundColor Gray
Write-Host ""
Write-Host "üéØ ROUTINE QUOTIDIENNE:" -ForegroundColor Yellow
Write-Host "  1. Avant IA: powershell ./scripts/auto_backup.ps1" -ForegroundColor Gray
Write-Host "  2. Travailler: git checkout ia" -ForegroundColor Gray
Write-Host "  3. Apr√®s IA: powershell ./scripts/check_ia_changes.ps1" -ForegroundColor Gray
Write-Host ""
Write-Host "üõ°Ô∏è Tu es maintenant prot√©g√© contre toute d√©rive IA!" -ForegroundColor Green
Write-Host ""
