#!/bin/bash
# üîÑ SCRIPT RESTAURATION BOTLIVE - EN CAS DE PROBL√àME

echo "üîÑ RESTAURATION BOTLIVE"
echo "======================="
echo ""

# Lister les backups disponibles
echo "üìÅ Backups disponibles:"
ls -dt backups/botlive_* 2>/dev/null | head -5

echo ""
echo "Quel backup voulez-vous restaurer ?"
echo "Format: botlive_YYYYMMDD_HHMMSS"
read -p "Nom du backup (ou 'latest' pour le plus r√©cent): " BACKUP_NAME

# Si "latest", prendre le plus r√©cent
if [ "$BACKUP_NAME" = "latest" ]; then
    BACKUP_DIR=$(ls -dt backups/botlive_* 2>/dev/null | head -1)
else
    BACKUP_DIR="backups/$BACKUP_NAME"
fi

# V√©rifier que le backup existe
if [ ! -d "$BACKUP_DIR" ]; then
    echo "‚ùå Backup non trouv√©: $BACKUP_DIR"
    exit 1
fi

echo ""
echo "üì¶ Restauration depuis: $BACKUP_DIR"
echo ""
read -p "‚ö†Ô∏è Confirmer la restauration ? (oui/non): " CONFIRM

if [ "$CONFIRM" != "oui" ]; then
    echo "‚ùå Restauration annul√©e"
    exit 0
fi

# Restaurer les fichiers
echo ""
echo "üîÑ Restauration en cours..."

cp -v "$BACKUP_DIR/botlive_rag_hybrid.py" core/
cp -v "$BACKUP_DIR/order_state_tracker.py" core/
cp -v "$BACKUP_DIR/botlive_prompt.txt" prompts/
cp -v "$BACKUP_DIR/order_states.db" ./ 2>/dev/null || echo "‚ö†Ô∏è order_states.db non restaur√©"
cp -v "$BACKUP_DIR/app.py" ./
cp -v "$BACKUP_DIR/test_auto_detect_validation.py" ./
cp -v "$BACKUP_DIR/test_ordre_melange.py" ./
cp -v "$BACKUP_DIR/check_state.py" ./
cp -v "$BACKUP_DIR/AUTO_DETECT_SPEC.md" ./

echo ""
echo "‚úÖ RESTAURATION TERMIN√âE !"
echo ""
echo "üß™ V√©rification recommand√©e:"
echo "  python3 test_auto_detect_validation.py"
echo ""
cat "$BACKUP_DIR/BACKUP_INFO.txt"
