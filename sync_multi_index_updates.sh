#!/bin/bash

# üîÑ SCRIPT DE SYNCHRONISATION - OPTIMISATIONS MULTI-INDEX MEILISEARCH
# Synchronise tous les fichiers modifi√©s/cr√©√©s pour l'architecture multi-index

echo "üîÑ SYNCHRONISATION MULTI-INDEX MEILISEARCH"
echo "=========================================="

# V√©rifier si on est dans le bon r√©pertoire
if [ ! -f "app.py" ]; then
    echo "‚ùå Erreur: Ex√©cuter depuis le r√©pertoire racine du projet"
    exit 1
fi

echo "üìÅ Synchronisation des fichiers modifi√©s/cr√©√©s..."

# 1. MOTEUR DE RECHERCHE MULTI-INDEX (NOUVEAU)
echo "üìÑ Synchronisation: core/multi_index_search_engine.py"
if [ -f "core/multi_index_search_engine.py" ]; then
    echo "   ‚úÖ Moteur de recherche multi-index cr√©√©"
else
    echo "   ‚ùå MANQUANT: core/multi_index_search_engine.py"
fi

# 2. API RAG MULTI-INDEX (NOUVEAU)
echo "üìÑ Synchronisation: api/multi_index_rag.py"
if [ -f "api/multi_index_rag.py" ]; then
    echo "   ‚úÖ API RAG multi-index cr√©√©e"
else
    echo "   ‚ùå MANQUANT: api/multi_index_rag.py"
fi

# 3. API SEARCH RAG MODIFI√âE
echo "üìÑ Synchronisation: api/search_rag.py"
if [ -f "api/search_rag.py" ]; then
    echo "   ‚úÖ API search_rag modifi√©e avec support MeiliSearch"
    # V√©rifier si la modification est pr√©sente
    if grep -q "search_company_multi_index" "api/search_rag.py"; then
        echo "   ‚úÖ Import multi-index d√©tect√©"
    else
        echo "   ‚ö†Ô∏è  Import multi-index manquant"
    fi
else
    echo "   ‚ùå MANQUANT: api/search_rag.py"
fi

# 4. INGESTION API MODIFI√âE (HYDE INT√âGR√â)
echo "üìÑ Synchronisation: ingestion/ingestion_api.py"
if [ -f "ingestion/ingestion_api.py" ]; then
    echo "   ‚úÖ Ingestion API avec HyDE int√©gr√©"
    # V√©rifier l'int√©gration HyDE
    if grep -q "create_company_word_cache" "ingestion/ingestion_api.py"; then
        echo "   ‚úÖ Int√©gration HyDE d√©tect√©e"
    else
        echo "   ‚ö†Ô∏è  Int√©gration HyDE manquante"
    fi
else
    echo "   ‚ùå MANQUANT: ingestion/ingestion_api.py"
fi

# 5. ANALYSEUR HYDE (EXISTANT - V√âRIFICATION)
echo "üìÑ V√©rification: core/ingestion_hyde_analyzer.py"
if [ -f "core/ingestion_hyde_analyzer.py" ]; then
    echo "   ‚úÖ Analyseur HyDE disponible"
else
    echo "   ‚ùå MANQUANT: core/ingestion_hyde_analyzer.py"
fi

# 6. UTILS MEILISEARCH (EXISTANT - V√âRIFICATION)
echo "üìÑ V√©rification: core/meilisearch_utils.py"
if [ -f "core/meilisearch_utils.py" ]; then
    echo "   ‚úÖ Utils MeiliSearch disponibles"
else
    echo "   ‚ùå MANQUANT: core/meilisearch_utils.py"
fi

echo ""
echo "üîß V√âRIFICATIONS TECHNIQUES"
echo "=========================="

# V√©rifier les d√©pendances Python
echo "üì¶ V√©rification des d√©pendances..."
if command -v python3 &> /dev/null; then
    echo "   ‚úÖ Python3 disponible"
    
    # V√©rifier meilisearch
    if python3 -c "import meilisearch" 2>/dev/null; then
        echo "   ‚úÖ Module meilisearch install√©"
    else
        echo "   ‚ùå Module meilisearch manquant"
        echo "   üí° Installer: pip install meilisearch"
    fi
    
    # V√©rifier fastapi
    if python3 -c "import fastapi" 2>/dev/null; then
        echo "   ‚úÖ Module fastapi install√©"
    else
        echo "   ‚ùå Module fastapi manquant"
    fi
    
else
    echo "   ‚ùå Python3 non disponible"
fi

echo ""
echo "üöÄ COMMANDES DE D√âMARRAGE"
echo "========================"

echo "1. D√©marrer MeiliSearch (si pas d√©j√† fait):"
echo "   meilisearch --master-key=your_master_key"
echo ""

echo "2. Tester l'ingestion avec HyDE:"
echo "   curl -X POST http://localhost:8000/ingestion/push_to_meili \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{\"company_id\": \"test\", \"data\": {...}}'"
echo ""

echo "3. Tester la recherche multi-index:"
echo "   curl -X POST http://localhost:8000/multi-rag/search \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{\"company_id\": \"test\", \"query\": \"casques moto\", \"limit\": 5}'"
echo ""

echo "4. Tester la recherche RAG avec MeiliSearch:"
echo "   curl -X POST http://localhost:8000/rag/search \\"
echo "        -H 'Content-Type: application/json' \\"
echo "        -d '{\"company_id\": \"test\", \"query\": \"livraison yopougon\", \"mode\": \"meilisearch\"}'"
echo ""

echo "5. V√©rifier le statut des index:"
echo "   curl http://localhost:8000/multi-rag/indexes/status/test"
echo ""

echo "‚úÖ SYNCHRONISATION TERMIN√âE"
echo "=========================="
echo "üéØ FONCTIONNALIT√âS DISPONIBLES:"
echo "   ‚Ä¢ Ingestion multi-index avec HyDE"
echo "   ‚Ä¢ Recherche multi-index intelligente"
echo "   ‚Ä¢ Priorisation searchable_text"
echo "   ‚Ä¢ Scoring HyDE adaptatif"
echo "   ‚Ä¢ Routage intelligent des requ√™tes"
echo "   ‚Ä¢ API RAG optimis√©e"
echo ""
echo "üìã PROCHAINES √âTAPES:"
echo "   1. Tester l'ingestion de documents"
echo "   2. Valider la recherche multi-index"
echo "   3. V√©rifier les performances"
echo "   4. Optimiser les scores HyDE"
