#!/usr/bin/env python3
"""
Test de validation du syst√®me HYDE d√©sactiv√©
"""

import asyncio
import sys
import os

# Ajouter le r√©pertoire parent au path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

async def test_hyde_disabled():
    """Test que le syst√®me HYDE est compl√®tement d√©sactiv√©"""
    
    print("üß™ TEST DU SYST√àME HYDE D√âSACTIV√â")
    print("=" * 50)
    
    try:
        # Importer la fonction HYDE
        from core.improved_hyde_scorer import improved_hyde_filter
        
        # Test 1: Query simple
        print("\n1Ô∏è‚É£ Test query simple:")
        query1 = "Vous vendez que des couches?"
        result1 = await improved_hyde_filter(query1, "test_company", 6)
        print(f"   Query originale: '{query1}'")
        print(f"   Query filtr√©e: '{result1}'")
        print(f"   ‚úÖ Identique: {query1 == result1}")
        
        # Test 2: Query complexe
        print("\n2Ô∏è‚É£ Test query complexe:")
        query2 = "Quels sont vos diff√©rents types de couches disponibles svp?"
        result2 = await improved_hyde_filter(query2, "test_company", 6)
        print(f"   Query originale: '{query2}'")
        print(f"   Query filtr√©e: '{result2}'")
        print(f"   ‚úÖ Identique: {query2 == result2}")
        
        # Test 3: Query avec caract√®res sp√©ciaux
        print("\n3Ô∏è‚É£ Test query avec caract√®res sp√©ciaux:")
        query3 = "Prix des couches Pampers taille M?"
        result3 = await improved_hyde_filter(query3, "test_company", 6)
        print(f"   Query originale: '{query3}'")
        print(f"   Query filtr√©e: '{result3}'")
        print(f"   ‚úÖ Identique: {query3 == result3}")
        
        # R√©sum√©
        print("\nüìä R√âSUM√â:")
        print(f"   - Test 1: {'‚úÖ PASS√â' if query1 == result1 else '‚ùå √âCHOU√â'}")
        print(f"   - Test 2: {'‚úÖ PASS√â' if query2 == result2 else '‚ùå √âCHOU√â'}")
        print(f"   - Test 3: {'‚úÖ PASS√â' if query3 == result3 else '‚ùå √âCHOU√â'}")
        
        all_passed = all([query1 == result1, query2 == result2, query3 == result3])
        print(f"\nüéØ R√âSULTAT FINAL: {'‚úÖ SYST√àME HYDE COMPL√àTEMENT D√âSACTIV√â' if all_passed else '‚ùå SYST√àME HYDE ENCORE ACTIF'}")
        
        return all_passed
        
    except Exception as e:
        print(f"‚ùå ERREUR: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(test_hyde_disabled())
    sys.exit(0 if success else 1)
