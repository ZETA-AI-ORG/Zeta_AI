#!/usr/bin/env python3
"""
üß™ TEST INT√âGRATION RAG + SUPABASE SIMPLE
V√©rifie que le RAG engine utilise bien notre nouvelle classe SupabaseSimple
"""

import asyncio
import sys
import os

# Ajouter le r√©pertoire parent au path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

async def test_rag_integration():
    """Test complet de l'int√©gration RAG + SupabaseSimple"""
    print("üß™ TEST INT√âGRATION RAG + SUPABASE SIMPLE")
    print("=" * 60)
    
    try:
        # Import du RAG engine
        from core.universal_rag_engine import get_universal_rag_response
        
        # Test avec la m√™me requ√™te que notre test standalone
        print("üîç Test requ√™te: 'couches b√©b√© 9kg prix'")
        print("üè¢ Company ID: MpfnlSbqwaZ6F4HvxQLRL9du0yG3")
        print("-" * 40)
        
        result = await get_universal_rag_response(
            message="couches b√©b√© 9kg prix",
            company_id="MpfnlSbqwaZ6F4HvxQLRL9du0yG3",
            user_id="test_user",
            company_name="Rue du Gros"
        )
        
        print("üéØ R√âSULTATS:")
        print(f"‚úÖ Succ√®s: {result['success']}")
        print(f"üìÑ Documents trouv√©s: {result['documents_found']}")
        print(f"üéØ Confiance: {result['confidence']:.3f}")
        print(f"‚è±Ô∏è  Temps: {result['processing_time_ms']:.0f}ms")
        print(f"üîç M√©thode: {result['search_method']}")
        
        print(f"\nüìù R√âPONSE:")
        print(f"{result['response']}")
        
        print(f"\nüìã CONTEXTE UTILIS√â:")
        context = result['context_used']
        if context and context != "Aucun":
            print(f"{context[:500]}...")
        else:
            print("‚ùå Aucun contexte utilis√©")
        
        # V√©rifications
        print(f"\nüîç V√âRIFICATIONS:")
        if result['documents_found']:
            print("‚úÖ Documents Supabase trouv√©s")
        else:
            print("‚ùå Aucun document Supabase trouv√©")
            
        if result['confidence'] > 0.5:
            print("‚úÖ Confiance √©lev√©e")
        else:
            print("‚ö†Ô∏è Confiance faible")
            
        if "couches" in result['response'].lower():
            print("‚úÖ R√©ponse pertinente (contient 'couches')")
        else:
            print("‚ö†Ô∏è R√©ponse peut-√™tre non pertinente")
            
    except Exception as e:
        print(f"‚ùå ERREUR: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_rag_integration())
