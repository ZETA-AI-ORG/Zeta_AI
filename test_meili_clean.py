"""
üß™ TEST DE LA VERSION PROPRE MEILISEARCH
V√©rifie que les documents sont retourn√©s complets et non fragment√©s
"""
import asyncio
from database.vector_store_clean import search_meili_keywords, get_available_indexes

async def test_meili_clean():
    """Test de la recherche MeiliSearch propre"""
    
    company_id = "MpfnlSbqwaZ6F4HvxQLRL9du0yG3"
    
    # Test 1: Recherche "couches √† pression"
    print("\n" + "="*60)
    print("üß™ TEST 1: Recherche 'couches √† pression' (CIBL√â PRODUCTS)")
    print("="*60)
    
    # CIBLER UNIQUEMENT L'INDEX PRODUCTS
    result = search_meili_keywords(
        query="couches √† pression",
        company_id=company_id,
        target_indexes=[f"products_{company_id}"],  # UNIQUEMENT products
        limit=3
    )
    
    print(f"\nüìã R√©sultat ({len(result)} chars):")
    print("-" * 40)
    
    if result:
        # Afficher les premiers 500 caract√®res pour v√©rifier
        print(result[:500])
        
        # V√©rifier qu'on a bien des documents complets
        if "=== " in result:
            print("\n‚úÖ Documents avec s√©parateurs trouv√©s")
            
            # Compter les documents
            doc_count = result.count("===")
            print(f"üìä Nombre de documents: {doc_count}")
            
            # V√©rifier qu'on a les bonnes infos
            if "Taille 1" in result and "Taille 7" in result:
                print("‚úÖ Document complet des couches √† pression trouv√©!")
            else:
                print("‚ö†Ô∏è Document incomplet - manque certaines tailles")
                
            # V√©rifier qu'on n'a PAS les couches culottes
            if "5.500 F CFA" in result or "paquet" in result.lower():
                print("‚ùå ERREUR: M√©lange avec les couches culottes d√©tect√©!")
            else:
                print("‚úÖ Pas de m√©lange avec d'autres produits")
    else:
        print("‚ùå Aucun r√©sultat")
    
    # Test 2: Recherche "couches culottes"
    print("\n" + "="*60)
    print("üß™ TEST 2: Recherche 'couches culottes' (CIBL√â PRODUCTS)")
    print("="*60)
    
    # CIBLER UNIQUEMENT L'INDEX PRODUCTS
    result2 = search_meili_keywords(
        query="couches culottes",
        company_id=company_id,
        target_indexes=[f"products_{company_id}"],  # UNIQUEMENT products
        limit=3
    )
    
    print(f"\nüìã R√©sultat ({len(result2)} chars):")
    print("-" * 40)
    
    if result2:
        print(result2[:500])
        
        # V√©rifier qu'on a les bons prix
        if "5.500 F CFA" in result2 and "paquet" in result2.lower():
            print("‚úÖ Document des couches culottes trouv√©!")
        else:
            print("‚ö†Ô∏è Document incomplet")
            
        # V√©rifier qu'on n'a PAS les couches √† pression
        if "Taille 1 - 0 √† 4 kg" in result2:
            print("‚ùå ERREUR: M√©lange avec les couches √† pression d√©tect√©!")
        else:
            print("‚úÖ Pas de m√©lange avec d'autres produits")
    else:
        print("‚ùå Aucun r√©sultat")
    
    # Test 3: Lister les indexes disponibles
    print("\n" + "="*60)
    print("üß™ TEST 3: Indexes disponibles")
    print("="*60)
    
    indexes = get_available_indexes(company_id)
    print(f"\nüìÇ {len(indexes)} indexes trouv√©s:")
    for idx in indexes:
        print(f"  - {idx}")
    
    print("\n" + "="*60)
    print("‚úÖ TESTS TERMIN√âS")
    print("="*60)

if __name__ == "__main__":
    asyncio.run(test_meili_clean())
